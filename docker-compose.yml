services:
  asset:
    build:
      context: ./${ASSET_SERVICE_HOST}
    ports:
      - "${ASSET_SERVICE_HOST_PORT}:${ASSET_SERVICE_CONTAINER_PORT}"
    env_file:
      - ./.env
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy

  simulator:
    build:
      context: ./${SIMULATOR_SERVICE_HOST}
    ports:
      - "${SIMULATOR_SERVICE_HOST_PORT}:${SIMULATOR_SERVICE_CONTAINER_PORT}"
    env_file:
      - ./.env
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  postgres:
    image: postgres:17.5
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_HOST_PORT}:${POSTGRES_CONTAINER_PORT}"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "psql -U ${POSTGRES_USER} -d ${POSTGRES_DB}", "pg_isready"]
      interval: 2s
      timeout: 5s
      retries: 10

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "${RABBITMQ_HOST_PORT}:${RABBITMQ_CONTAINER_PORT}"
      - "${RABBITMQ_UI_HOST_PORT}:${RABBITMQ_UI_CONTAINER_PORT}" # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 2s
      timeout: 5s
      retries: 10

  mongodb:
    image: mongo:7
    ports:
      - "${MONGODB_HOST_PORT}:${MONGODB_CONTAINER_PORT}"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: asset_measurements # TODO check if this is necessary.
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:
  mongo-data: