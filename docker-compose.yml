services:
  asset:
    build:
      context: ./asset
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      # mongodb:
      #   condition: service_healthy

  simulator:
    build:
      context: ./simulator
    ports:
      - "8081:8080"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      # mongodb:
      #   condition: service_healthy

  postgres:
    image: postgres:17.5
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "psql -U ${POSTGRES_USER} -d ${POSTGRES_DB}", "pg_isready"]
      interval: 2s
      timeout: 5s
      retries: 10

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672" # management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 2s
      timeout: 5s
      retries: 10

  # mongodb:
  #   image: mongo:6
  #   ports:
  #     - "27017:27017"
  #   volumes:
  #     - mongo-data:/data/db
  #   healthcheck:
  #     test: echo 'db.runCommand("ping").ok' | mongosh mongodb://localhost:27017/test --quiet | grep 1
  #     interval: 2s
  #     timeout: 5s
  #     retries: 5

volumes:
  postgres-data:
  # mongo-data: